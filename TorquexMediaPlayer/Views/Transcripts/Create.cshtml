@model TorquexMediaPlayer.Models.FileUpload

@{
    ViewBag.Title = "Create";
}

<img id="createhelpbtn" src="~/images/if_help_36102.png" onmouseover="" alt="help" style="float:right; margin: 10px; cursor: pointer;" />
<h2>Upload new file</h2>

<link href="~/Content/ui-lightness/jquery-ui-1.8.14.custom.css" rel="stylesheet" type="text/css" />

<script src="~/Scripts/jquery-ui-1.8.14.custom.min.js" type="text/javascript"></script>


<div id="helpmodal" class="help_modal">
    <div class="modal_contents">
        <span class="close">
            &times;
        </span>
        <h4 style="text-decoration:underline; float:initial">HELP CONTENTS</h4>
        <p>This page helps you to upload a file for transcription. Mandatory fields are: Files, language, mono/stereo (default is mono).</p>
        <p style="text-decoration:underline">Select file name:</p>
        <p>our total list of supported formats includes</p>
        <p>*.mp3, *.mp4, *.flv, *.wmv, *.avi, *.mpeg, *.aac, *.aiff, *.au, *.ogg, *.3gp, *.flac, *.ra, *.m4a, *.wma, *.m4v, *.caf, *.cf, *.mov, *.mpg, *.webm, *.wav, *.asf, *.amr</p>
        <p style="text-decoration:underline">Languages:</p>
        <p>We currently support only english(Australian, U.K and U.S.A)</p>
        <p style="text-decoration:underline">Custom vocabulary terms:</p>
        <p>Add unique words such as pronouns, company names, product names or acronyms to specific client’s vocabulary to improve transcription accuracy and keyword spotting.</p>
        <p>or</p>
        <p>The application allows you to customize the speech engine to correctly recognize words and phrases that you would not find in a standard dictionary. Using this, you can have the flexibility of a highly tuned, and even more accurate speech engine for specific verticals and vernacular. You may add custom terms to the speech engine vocabulary, create ‘sounds like’ spellings which more accurately reflect how an uncommon word may sound, and add a weighting factor which will fine-tune preferential recognition of custom terms.</p>
        <p style="text-decoration:underline;font-style:oblique">Mono / Stereo:</p>
        <p>Recording and processing conversations (such a phone calls) in stereo can significantly improve transcription accuracy and analytical insight. To realize the benefit, each speaker is recorded on a different channel (left or right), and the speaker metadata is provided to VoiceBase when uploading the recording.</p>
        <p style="text-decoration:underline">Left/Right Channel (for Stereo): </p>
        <p>Name of the speakers of the left and right channel</p>
        <p style="text-decoration:underline">Project Names:</p>
        <p>This field is used to group Transcriptions together for reference as a Unit or Subject.  You can leave this field blank, or type in a new name, or select from a previously defined one.</p>

    </div>
</div>





<form method="post" enctype = "multipart/form-data" action="@Url.Action("Upload","Transcripts")">
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">



            <div class="form-group">
                <label for="fileupload" class="col-md-2 control-label">Files to transcribe</label>
                <div class="col-md-10" style="height:80px;">
                        <input id="fileupload" type="file" name="files[]" multiple class="form-control">
                </div>
            </div>
        <div class="form-group">
            <label for="language" class="col-md-2 control-label">Language</label>
            <div class="col-md-10">
                <select id="language" name="language" class="form-control">
                    <option value="en-AU">Select Language</option>
                    <option value="en-AU">English Australian</option>
                    <option value="en-US">English US</option>
                    <option value="en-UK">English UK</option>
                </select><br />
            </div>
        </div>
        <div class="form-group">

            <label for="custom_vocab" class="col-md-2 control-label">Custom Vocab Terms</label>
            <div class="col-md-10">
                    @Html.EditorFor(model => model.custom_vocab, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.custom_vocab, "", new { @class = "text-danger" })

                 Enter custom vocab phrases and terms seperated by a semi colon ";"
            </div>
        </div>
        <div class="form-group">
            <label for="channel_mono" class="col-md-2 control-label">Mono</label>
            <input type="radio" name="channel" value="mono" id="channel_mono" class="form-control" onclick="hideStereo()" checked />
            <label for="channel_stereo" class="col-md-2 control-label">Stereo</label>
            <input type="radio" name="channel" value="stereo" id="channel_stereo" class="form-control" onclick="showStereo()" />
        </div>
        <div class="form-group" hidden id="stereo">
            <label for="stereo_channel1" class="col-md-2 control-label">Left Channel</label>
            <div class="col-md-10">
                <input type="text" id="stereo_channel1" name="stereo_channel1" value="Agent" class="form-control" />
            </div>
            <label for="stereo_channel2" class="col-md-2 control-label">Right Channel</label>
            <div class="col-md-10">
                <input type="text" id="stereo_channel2" name="stereo_channel2" value="Caller" class="form-control" />
            </div>
        </div>
        <div class="form-group" id="diaryOn" style="display:none;">

            <label for="diarization" class="col-md-2 control-label">Diarization</label>
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.diarization, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">

            <label for="project" class="col-md-2 control-label">New Unit<br/><br/>or Existing Unit</label>
            <div class="col-md-10">
                <input type="text" id="project" name="project" class="form-control" />
               @Html.DropDownList("projectList", (IEnumerable<SelectListItem>)ViewBag.projectList, string.Empty, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label for="upload" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input type="submit" id="upload" value="Upload Selected Files" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>





<script type="text/javascript">
    function hideStereo() {
        document.getElementById("stereo").hidden = true;
        document.getElementById("diaryOn").hidden = false;
    }
    function showStereo() {
        document.getElementById("stereo").hidden = false;
        document.getElementById("diaryOn").hidden = true;
//        document.getElementById("diarization").value = false;
    }

    $(document).ready(function () {
        $('#fileupload').fileupload({
            dataType: 'json',
            url: '/Transcripts/UploadFiles',
            autoUpload: true,
            done: function (e, data) {
                $('.file_name').html(data.result.name);
                $('.file_type').html(data.result.type);
                $('.file_size').html(data.result.size);
            }
        }).on('fileuploadprogressall', function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('.progress .progress-bar').css('width', progress + '%');
        });
    });


</script>

<script type="text/javascript">
            var modal = document.getElementById('helpmodal');
            var helpbtn = document.getElementById("createhelpbtn");
            var span = document.getElementsByClassName("close")[0];
            helpbtn.onclick = function () {
                modal.style.display = "block";
            }
            span.onclick = function () {
                modal.style.display = "none";
            }
</script>
<style>
    .help_modal {
        display: none;
        position: fixed;
        z-index: 120;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.5);
    }

    .modal_contents {
        background-color: #fefefe;
        border-radius: 25px;
        margin: 4% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 50%;
    }

    .close {
        color: #aaa;
        float: initial right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
</style>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
